#: import hex_color kivy.utils.get_color_from_hex

<Eraser@Widget>
    visible: False
    canvas.after:
        Color:
            rgba: [0.5, 0.5, 0.5, 1] if self.visible else [1, 1, 1, 0]
        Line:
            circle: self.center_x, self.center_y, self.width
    size_hint: None, None        
    size: 23, self.width

<IconButton@ButtonBehavior+Widget>:
    icon: ''
    size_hint: None, None
    width: self.height
    canvas:
        Color:
            rgba: [1, 1, 1, 1] if self.state == 'normal' else [0.8, 0.8, 0.8, 1]
        Rectangle:
            size: self.size
            pos: self.pos
            source: self.icon

<InfoCircle@FloatLayout>:
    text: "1"

    Widget:
        id: inner
        canvas.before:
            Color:
                rgba: hex_color('#c1f0ed')
            Ellipse:
                angle_start: 0
                angle_end: 290
                size: self.size
                pos: self.pos
        size_hint: None, 201/248
        width: self.height
        pos_hint: {'center_x': 0.5, 'y': 0}

    Widget:
        canvas.before:
            Color:
                rgba: hex_color('#0ec7b5')
            Ellipse:
                size: self.size
                pos: self.pos
        pos_hint: {'center_x': 0.5}
        y: root.y + (inner.height - self.height)/2
        size_hint: None, 160/248
        width: self.height

    Label:
        text: root.text
        size_hint: 0.45, 0.45
        pos_hint: {'center_y': 0.41, 'center_x': 0.5}
        font_size: self.height
        bold: True
        color: 1, 1, 1, 1
        font_name: 'poppins'


<RoundedButton>:
    color: 1, 1, 1, 1
    x_hint: 154/768
    y_hint: 70/250
    size_hint: self.x_hint, self.y_hint
    font_name: 'poppins'
    bold: True
    short: True
    canvas.before:
        Color:
            rgba: self.color if self.state == 'normal' else [0.8, 0.8, 0.8, 1]
        Rectangle:
            size: self.size
            pos: self.pos
            source: './assets/rounded-button.png' if self.short else './assets/elongated-rounded-button.png'


<NavigationPane>:
	question_text: ''
	question_num: ''

	InfoCircle:
		id: question_num
		size_hint: None, 0.58
		width: self.height
		pos_hint: {'center_x': 0.5, 'y': 0.49}
		text: root.question_num

	Label:
		id: question
		size_hint: 728/768, 101/250
		pos_hint: {'center_x': 0.5, 'y': 0}
		
		canvas.before:
			Color:
				rgba: hex_color('#10c8b1')
			RoundedRectangle:
				size: self.size
				pos: self.pos
				radius: [10, 10, 10, 10]

		text: root.question_text
		bold: True
		markup: True
		font_name: 'poppins'
		font_size: self.width * 0.022

	RoundedButton:
		id: next
		pos_hint: {'right': 748/768, 'top': 203/250}
		text: 'Next'
		on_release: root.next()

	RoundedButton:
		id: prev
		pos_hint: {'x': 20/768, 'top': 203/250}
		text: 'Previous'
		on_release: root.previous()


<TaskScreen>:

	FloatLayout:

		NavigationPane:
			id: navigation
			pos_hint: {'x': 0, 'y': 0.79}
			size_hint: 1, 0.2

		CanvasWidget:
			id: canvas_widget
			canvas.after:
				Color:
					rgba: [0.5, 0.5, 0.5, 1]
				Line:
					rounded_rectangle: [self.x, self.y, self.width, self.height, 20]
				Color:
					rgba: [1, 1, 1, 1]
			pos_hint: {'center_x': 0.5, 'y': 0.025}
			size_hint: 0.95, 0.74
			eraser: eraser

		Eraser:
			id: eraser
			height: navigation.height / 2

		IconButton:
			pen_icon: True
			icon: './assets/pen.png' if self.pen_icon else './assets/eraser.png'
			pos: canvas_widget.right - self.width - (canvas_widget.width * 0.01), canvas_widget.top - self.height - (canvas_widget.width * 0.01)
			height: navigation.height / 2
			on_release: canvas_widget.switch_draw_mode(self)

